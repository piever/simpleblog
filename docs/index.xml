<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thoughts and things</title>
    <link>https://piever.github.io/simpleblog/</link>
    <description>Recent content on Thoughts and things</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2017 00:18:23 +0000</lastBuildDate>
    
	<atom:link href="https://piever.github.io/simpleblog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Programming in Julia for beginners, chapter III</title>
      <link>https://piever.github.io/simpleblog/posts/julia_chapter3/</link>
      <pubDate>Wed, 15 Nov 2017 00:18:23 +0000</pubDate>
      
      <guid>https://piever.github.io/simpleblog/posts/julia_chapter3/</guid>
      <description>Giving names to things In the previous blog post, we have found a somewhat tedious way to compute the Fibonacci sequence. We started by typing 1+1 at the console, we looked at the result, which was 2, we typed 2+1, we got 3, we typed 3+2 and so on and so forth. In this and the following post, we&amp;rsquo;ll discover a less excruciatingly boring way of doing the same computation.</description>
    </item>
    
    <item>
      <title>Programming in Julia for beginners, chapter II</title>
      <link>https://piever.github.io/simpleblog/posts/julia_chapter2/</link>
      <pubDate>Wed, 15 Nov 2017 00:17:23 +0000</pubDate>
      
      <guid>https://piever.github.io/simpleblog/posts/julia_chapter2/</guid>
      <description>Numbers and math In the previous post we mainly played with strings, but Julia is also very good at math. In this post we will do some math in Julia.
Integer and and non integer numbers Julia accept both integer numbers and non integer numbers (with a decimal point). All basic (and often non basic) mathematical functions are implemented in Julia. Here we will play a bit with the four basic operations (+, -, *, /), the exponentiation operator (^) and the comparison operators (&amp;gt;, ==, &amp;lt;).</description>
    </item>
    
    <item>
      <title>Programming in Julia for beginners, chapter I</title>
      <link>https://piever.github.io/simpleblog/posts/julia_chapter1/</link>
      <pubDate>Tue, 14 Nov 2017 00:17:19 +0000</pubDate>
      
      <guid>https://piever.github.io/simpleblog/posts/julia_chapter1/</guid>
      <description>Learning how to code This is the first of a series of posts aimed about the Julia programming language. Julia is a reasonably young language designed for scientific computing. Despite being free, fast and elegantly designed, Julia is not as widely used as I think it should be. I also believe that, due to its simplicity and clarity, Julia makes for a good first programming language. In case some newcomers to programming are curious enough to give Julia a try, I&amp;rsquo;m making a series of tutorials about it, starting from the very beginning.</description>
    </item>
    
  </channel>
</rss>